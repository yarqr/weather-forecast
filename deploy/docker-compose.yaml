services:
  redis:
    image: "redis:7.2-alpine"
    restart: "always"
    volumes:
      - "redis-data:/data"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
  postgres:
    image: "postgres:16.3-alpine"
    restart: "always"
    environment:
      POSTGRES_PASSWORD: "docker"
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  migrations:
    build:
      context: ..
      dockerfile: "deploy/bot.Dockerfile"
      target: base
    restart: "on-failure"
    depends_on:
      - postgres
    volumes:
      - "../alembic.ini:/app/alembic.ini"
      - "../config.toml:/app/config.toml"
      - "../backend:/app/backend/"
    entrypoint: [ "poetry", "run", "alembic", "upgrade", "head" ]
  bot:
    restart: "always"
    build:
      context: ..
      dockerfile: "deploy/bot.Dockerfile"
    depends_on:
      - postgres
      - redis
      - migrations
  web:
    restart: "always"
    build:
      context: ..
      dockerfile: "deploy/web.Dockerfile"
    ports:
      - "8000:8000"


volumes:
  redis-data:
  postgres-data:
